// <auto-generated />
using System;
using DisciplinarySystem.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisciplinarySystem.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221026230758_AddTypeToUserTable")]
    partial class AddTypeToUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DisciplinarySystem.Domain.Authentication.AuthRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthRole");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Authentication.AuthUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthUser");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Commonications.SMS", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SMS");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaining", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("College")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationalGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Father")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complainings");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<Guid>("ComplainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlaintiffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComplainingId")
                        .IsUnique();

                    b.HasIndex("PlaintiffId")
                        .IsUnique();

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.ComplaintDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ComplaintId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Plaintiff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plaintiffs");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Defences.Defence", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("Defences");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Defences.DefenceDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DefenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("DefenceId");

                    b.ToTable("DefenceDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ComplaintId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintId")
                        .IsUnique();

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VerdictId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ViolationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VerdictId");

                    b.HasIndex("ViolationId")
                        .IsUnique();

                    b.ToTable("CentralCommitteeVote");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVoteDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CentralCommitteeVoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CentralCommitteeVoteId");

                    b.ToTable("CentralCommitteeVoteDocuments", (string)null);
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Epistles.Epistle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ComplaintId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reciver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("ComplaintId");

                    b.ToTable("Epistles");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Epistles.EpistleDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("EpistleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("EpistleId");

                    b.ToTable("EpistleDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.FinalVotes.FinalVote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VerdictId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ViolationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VerdictId");

                    b.HasIndex("ViolationId")
                        .IsUnique();

                    b.ToTable("FinalVotes");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.FinalVotes.FinalVoteDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinalVoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("FinalVoteId");

                    b.ToTable("FinalVoteDocuments", (string)null);
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Informants.Informed", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Father")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("Informants");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Informants.InformedDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InformedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("InformedId");

                    b.ToTable("InformantsDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ComplainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InviteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PlaintiffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("ComplainingId");

                    b.HasIndex("PlaintiffId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.InvitationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("InvitationId");

                    b.ToTable("InvitationDocument", (string)null);
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.InvitationUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "InvitationId");

                    b.HasIndex("InvitationId");

                    b.ToTable("InvitationUsers");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.MeetingUsers", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MeetingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "MeetingId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingUsers");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.Proceedings", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MeetingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId")
                        .IsUnique();

                    b.ToTable("Proceedings");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Objections.Objection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("Objections");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Objections.ObjectionDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ObjectionId");

                    b.ToTable("ObjectionDocuments", (string)null);
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VerdictId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ViolationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VerdictId");

                    b.HasIndex("ViolationId")
                        .IsUnique();

                    b.ToTable("PrimaryVotes");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVoteDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrimaryVoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryVoteId");

                    b.ToTable("PrimaryVoteDocuments", (string)null);
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.RelatedInfos.RelatedInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("RelatedInfos");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.RelatedInfos.RelatedInfoDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RelatedInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("RelatedInfoId");

                    b.ToTable("RelatedInfoDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Users.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Verdicts.Verdict", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Verdicts");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.Violation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Violations");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.ViolationCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViolationCategories");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.ViolationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ViolationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ViolationId");

                    b.ToTable("ViolationDocuments");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Authentication.AuthUser", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Authentication.AuthRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.NationalCode", "NationalCode", b1 =>
                        {
                            b1.Property<long>("AuthUserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("NationalCode");

                            b1.HasKey("AuthUserId");

                            b1.ToTable("AuthUser");

                            b1.WithOwner()
                                .HasForeignKey("AuthUserId");
                        });

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<long>("AuthUserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .IsUnicode(false)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("AuthUserId");

                            b1.ToTable("AuthUser");

                            b1.WithOwner()
                                .HasForeignKey("AuthUserId");
                        });

                    b.Navigation("NationalCode")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Commonications.SMS", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Authentication.AuthUser", "User")
                        .WithMany("SMSCollection")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("SMSId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(13)
                                .IsUnicode(false)
                                .HasColumnType("varchar(13)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("SMSId");

                            b1.ToTable("SMS");

                            b1.WithOwner()
                                .HasForeignKey("SMSId");
                        });

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaining", b =>
                {
                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.NationalCode", "NationalCode", b1 =>
                        {
                            b1.Property<Guid>("ComplainingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("NationalCode");

                            b1.HasKey("ComplainingId");

                            b1.ToTable("Complainings");

                            b1.WithOwner()
                                .HasForeignKey("ComplainingId");
                        });

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.StudentNumber", "StudentNumber", b1 =>
                        {
                            b1.Property<Guid>("ComplainingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("StudentNumber");

                            b1.HasKey("ComplainingId");

                            b1.ToTable("Complainings");

                            b1.WithOwner()
                                .HasForeignKey("ComplainingId");
                        });

                    b.Navigation("NationalCode")
                        .IsRequired();

                    b.Navigation("StudentNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaint", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Complaints.Complaining", "Complaining")
                        .WithOne("Complaint")
                        .HasForeignKey("DisciplinarySystem.Domain.Complaints.Complaint", "ComplainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Complaints.Plaintiff", "Plaintiff")
                        .WithOne("Complaint")
                        .HasForeignKey("DisciplinarySystem.Domain.Complaints.Complaint", "PlaintiffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaining");

                    b.Navigation("Plaintiff");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.ComplaintDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Complaints.Complaint", "Complaint")
                        .WithMany("Documents")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("ComplaintDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("ComplaintDocumentId");

                            b1.ToTable("ComplaintDocuments");

                            b1.WithOwner()
                                .HasForeignKey("ComplaintDocumentId");
                        });

                    b.Navigation("Complaint");

                    b.Navigation("File")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Plaintiff", b =>
                {
                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.NationalCode", "NationalCode", b1 =>
                        {
                            b1.Property<Guid>("PlaintiffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("NationalCode");

                            b1.HasKey("PlaintiffId");

                            b1.ToTable("Plaintiffs");

                            b1.WithOwner()
                                .HasForeignKey("PlaintiffId");
                        });

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("PlaintiffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("PlaintiffId");

                            b1.ToTable("Plaintiffs");

                            b1.WithOwner()
                                .HasForeignKey("PlaintiffId");
                        });

                    b.Navigation("NationalCode")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Defences.Defence", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Defences")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Defences.DefenceDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Defences.Defence", "Defence")
                        .WithMany("Documents")
                        .HasForeignKey("DefenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("DefenceDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("DefenceDocumentId");

                            b1.ToTable("DefenceDocuments");

                            b1.WithOwner()
                                .HasForeignKey("DefenceDocumentId");
                        });

                    b.Navigation("Defence");

                    b.Navigation("File")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Complaints.Complaint", "Complaint")
                        .WithOne("Case")
                        .HasForeignKey("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVote", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Verdicts.Verdict", "Verdict")
                        .WithMany("CentralCommitteeVotes")
                        .HasForeignKey("VerdictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Violations.Violation", "Violation")
                        .WithOne("CentralCommitteeVote")
                        .HasForeignKey("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVote", "ViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Verdict");

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVoteDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVote", "CentralCommitteeVote")
                        .WithMany("Documents")
                        .HasForeignKey("CentralCommitteeVoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("CentralCommitteeVoteDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("CentralCommitteeVoteDocumentId");

                            b1.ToTable("CentralCommitteeVoteDocuments");

                            b1.WithOwner()
                                .HasForeignKey("CentralCommitteeVoteDocumentId");
                        });

                    b.Navigation("CentralCommitteeVote");

                    b.Navigation("File")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Epistles.Epistle", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Epistles")
                        .HasForeignKey("CaseId");

                    b.HasOne("DisciplinarySystem.Domain.Complaints.Complaint", "Complaint")
                        .WithMany("Epistles")
                        .HasForeignKey("ComplaintId");

                    b.Navigation("Case");

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Epistles.EpistleDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Epistles.Epistle", "Epistle")
                        .WithMany("Documents")
                        .HasForeignKey("EpistleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("EpistleDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("EpistleDocumentId");

                            b1.ToTable("EpistleDocuments");

                            b1.WithOwner()
                                .HasForeignKey("EpistleDocumentId");
                        });

                    b.Navigation("Epistle");

                    b.Navigation("File")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.FinalVotes.FinalVote", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Verdicts.Verdict", "Verdict")
                        .WithMany("FinalVotes")
                        .HasForeignKey("VerdictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Violations.Violation", "Violation")
                        .WithOne("FinalVote")
                        .HasForeignKey("DisciplinarySystem.Domain.FinalVotes.FinalVote", "ViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Verdict");

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.FinalVotes.FinalVoteDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.FinalVotes.FinalVote", "FinalVote")
                        .WithMany("Documents")
                        .HasForeignKey("FinalVoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("FinalVoteDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("FinalVoteDocumentId");

                            b1.ToTable("FinalVoteDocuments");

                            b1.WithOwner()
                                .HasForeignKey("FinalVoteDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("FinalVote");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Informants.Informed", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Informants")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.NationalCode", "NationalCode", b1 =>
                        {
                            b1.Property<Guid>("InformedId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("NationalCode");

                            b1.HasKey("InformedId");

                            b1.ToTable("Informants");

                            b1.WithOwner()
                                .HasForeignKey("InformedId");
                        });

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("InformedId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("InformedId");

                            b1.ToTable("Informants");

                            b1.WithOwner()
                                .HasForeignKey("InformedId");
                        });

                    b.Navigation("Case");

                    b.Navigation("NationalCode")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Informants.InformedDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Informants.Informed", "Informed")
                        .WithMany("Documents")
                        .HasForeignKey("InformedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("InformedDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("InformedDocumentId");

                            b1.ToTable("InformantsDocuments");

                            b1.WithOwner()
                                .HasForeignKey("InformedDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("Informed");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.Invitation", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Invitations")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Complaints.Complaining", "Complaining")
                        .WithMany("Invitations")
                        .HasForeignKey("ComplainingId");

                    b.HasOne("DisciplinarySystem.Domain.Complaints.Plaintiff", "Plaintiff")
                        .WithMany("Invitations")
                        .HasForeignKey("PlaintiffId");

                    b.Navigation("Case");

                    b.Navigation("Complaining");

                    b.Navigation("Plaintiff");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.InvitationDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Invitations.Invitation", "Invitation")
                        .WithMany("Documents")
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("InvitationDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("InvitationDocumentId");

                            b1.ToTable("InvitationDocument");

                            b1.WithOwner()
                                .HasForeignKey("InvitationDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("Invitation");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.InvitationUser", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Invitations.Invitation", "Invitation")
                        .WithMany("InvitationUsers")
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Users.User", "User")
                        .WithMany("InvitationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.Meeting", b =>
                {
                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.DateTimeRange", "HoldingTime", b1 =>
                        {
                            b1.Property<Guid>("MeetingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("From")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartTime");

                            b1.Property<DateTime>("To")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndTime");

                            b1.HasKey("MeetingId");

                            b1.ToTable("Meetings");

                            b1.WithOwner()
                                .HasForeignKey("MeetingId");
                        });

                    b.Navigation("HoldingTime")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.MeetingUsers", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Meetings.Meeting", "Meeting")
                        .WithMany("MeetingUsers")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Users.User", "User")
                        .WithMany("MeetingUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.Proceedings", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Meetings.Meeting", "Meeting")
                        .WithOne("Proceedings")
                        .HasForeignKey("DisciplinarySystem.Domain.Meetings.Proceedings", "MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Objections.Objection", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Objections")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Objections.ObjectionDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Objections.Objection", "Objection")
                        .WithMany("Documents")
                        .HasForeignKey("ObjectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("ObjectionDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("ObjectionDocumentId");

                            b1.ToTable("ObjectionDocuments");

                            b1.WithOwner()
                                .HasForeignKey("ObjectionDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("Objection");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVote", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Verdicts.Verdict", "Verdict")
                        .WithMany("PrimaryVotes")
                        .HasForeignKey("VerdictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Violations.Violation", "Violation")
                        .WithOne("PrimaryVote")
                        .HasForeignKey("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVote", "ViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Verdict");

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVoteDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVote", "PrimaryVote")
                        .WithMany("Documents")
                        .HasForeignKey("PrimaryVoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("PrimaryVoteDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("PrimaryVoteDocumentId");

                            b1.ToTable("PrimaryVoteDocuments");

                            b1.WithOwner()
                                .HasForeignKey("PrimaryVoteDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("PrimaryVote");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.RelatedInfos.RelatedInfo", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("RelatedInfos")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.RelatedInfos.RelatedInfoDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.RelatedInfos.RelatedInfo", "RelatedInfo")
                        .WithMany("Documents")
                        .HasForeignKey("RelatedInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("RelatedInfoDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("RelatedInfoDocumentId");

                            b1.ToTable("RelatedInfoDocuments");

                            b1.WithOwner()
                                .HasForeignKey("RelatedInfoDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("RelatedInfo");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Users.User", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.DateTimeRange", "AttendenceTime", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("From")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartDate");

                            b1.Property<DateTime>("To")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndDate");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.NationalCode", "NationalCode", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("NationalCode");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("AttendenceTime")
                        .IsRequired();

                    b.Navigation("NationalCode")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.Violation", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", "Case")
                        .WithMany("Violations")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplinarySystem.Domain.Violations.ViolationCategory", "Category")
                        .WithMany("Violations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.ViolationDocument", b =>
                {
                    b.HasOne("DisciplinarySystem.Domain.Violations.Violation", "Violation")
                        .WithMany("Documents")
                        .HasForeignKey("ViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DisciplinarySystem.SharedKernel.ValueObjects.Document", "File", b1 =>
                        {
                            b1.Property<Guid>("ViolationDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("File");

                            b1.HasKey("ViolationDocumentId");

                            b1.ToTable("ViolationDocuments");

                            b1.WithOwner()
                                .HasForeignKey("ViolationDocumentId");
                        });

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Authentication.AuthRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Authentication.AuthUser", b =>
                {
                    b.Navigation("SMSCollection");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaining", b =>
                {
                    b.Navigation("Complaint")
                        .IsRequired();

                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Complaint", b =>
                {
                    b.Navigation("Case")
                        .IsRequired();

                    b.Navigation("Documents");

                    b.Navigation("Epistles");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Complaints.Plaintiff", b =>
                {
                    b.Navigation("Complaint")
                        .IsRequired();

                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Defences.Defence", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.Cases.Case", b =>
                {
                    b.Navigation("Defences");

                    b.Navigation("Epistles");

                    b.Navigation("Informants");

                    b.Navigation("Invitations");

                    b.Navigation("Objections");

                    b.Navigation("RelatedInfos");

                    b.Navigation("Violations");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.DisciplinaryCase.CentralCommitteeVotes.CentralCommitteeVote", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Epistles.Epistle", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.FinalVotes.FinalVote", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Informants.Informed", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Invitations.Invitation", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("InvitationUsers");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Meetings.Meeting", b =>
                {
                    b.Navigation("MeetingUsers");

                    b.Navigation("Proceedings")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Objections.Objection", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.PrimaryVotes.PrimaryVote", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.RelatedInfos.RelatedInfo", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Users.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Users.User", b =>
                {
                    b.Navigation("InvitationUsers");

                    b.Navigation("MeetingUsers");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Verdicts.Verdict", b =>
                {
                    b.Navigation("CentralCommitteeVotes");

                    b.Navigation("FinalVotes");

                    b.Navigation("PrimaryVotes");
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.Violation", b =>
                {
                    b.Navigation("CentralCommitteeVote")
                        .IsRequired();

                    b.Navigation("Documents");

                    b.Navigation("FinalVote")
                        .IsRequired();

                    b.Navigation("PrimaryVote")
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinarySystem.Domain.Violations.ViolationCategory", b =>
                {
                    b.Navigation("Violations");
                });
#pragma warning restore 612, 618
        }
    }
}
